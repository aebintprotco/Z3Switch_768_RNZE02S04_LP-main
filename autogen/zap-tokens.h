// This file is generated by ZCL Advanced Platform generator. Please don't edit manually.

// This file contains the tokens for nonSingletons stored in flash

// Identifier tags for tokens
// Creator for attribute: on/off, endpoint: 1
#define CREATOR_ON_OFF_1 0xB000
#define NVM3KEY_ON_OFF_1 (NVM3KEY_DOMAIN_ZIGBEE | 0xB000)
// Creator for attribute: on/off, endpoint: 2
#define CREATOR_ON_OFF_2 0xB001
#define NVM3KEY_ON_OFF_2 (NVM3KEY_DOMAIN_ZIGBEE | 0xB001)
// Creator for attribute: on/off, endpoint: 3
#define CREATOR_ON_OFF_3 0xB002
#define NVM3KEY_ON_OFF_3 (NVM3KEY_DOMAIN_ZIGBEE | 0xB002)


// Types for the tokens
#ifdef DEFINETYPES
typedef uint8_t tokType_on_off;
        #endif // DEFINETYPES

// Actual token definitions
#ifdef DEFINETOKENS

DEFINE_BASIC_TOKEN(ON_OFF_1, tokType_on_off, 0x00)
DEFINE_BASIC_TOKEN(ON_OFF_2, tokType_on_off, 0x00)
DEFINE_BASIC_TOKEN(ON_OFF_3, tokType_on_off, 0x00)
#endif // DEFINETOKENS

// Macro snippet that loads all the attributes from tokens
#define GENERATED_TOKEN_LOADER(endpoint) do { \
  uint8_t ptr[1]; \
  uint8_t curNetwork = emberGetCurrentNetwork(); \
  uint8_t epNetwork; \
  epNetwork = emberAfNetworkIndexFromEndpoint(1); \
  if(1 == (endpoint) || (EMBER_BROADCAST_ENDPOINT == (endpoint) && epNetwork == curNetwork)) { \
    halCommonGetToken((tokType_on_off *)ptr, TOKEN_ON_OFF_1); \
    emberAfWriteServerAttribute(1, ZCL_ON_OFF_CLUSTER_ID, ZCL_ON_OFF_ATTRIBUTE_ID, (uint8_t*)ptr, ZCL_BOOLEAN_ATTRIBUTE_TYPE); \
  } \
  epNetwork = emberAfNetworkIndexFromEndpoint(2); \
  if(2 == (endpoint) || (EMBER_BROADCAST_ENDPOINT == (endpoint) && epNetwork == curNetwork)) { \
    halCommonGetToken((tokType_on_off *)ptr, TOKEN_ON_OFF_2); \
    emberAfWriteServerAttribute(2, ZCL_ON_OFF_CLUSTER_ID, ZCL_ON_OFF_ATTRIBUTE_ID, (uint8_t*)ptr, ZCL_BOOLEAN_ATTRIBUTE_TYPE); \
  } \
  epNetwork = emberAfNetworkIndexFromEndpoint(3); \
  if(3 == (endpoint) || (EMBER_BROADCAST_ENDPOINT == (endpoint) && epNetwork == curNetwork)) { \
    halCommonGetToken((tokType_on_off *)ptr, TOKEN_ON_OFF_3); \
    emberAfWriteServerAttribute(3, ZCL_ON_OFF_CLUSTER_ID, ZCL_ON_OFF_ATTRIBUTE_ID, (uint8_t*)ptr, ZCL_BOOLEAN_ATTRIBUTE_TYPE); \
  } \
} while (false)

// Macro snippet that saves the attribute to token
#define GENERATED_TOKEN_SAVER do { \
  uint8_t allZeroData[1]; \
  MEMSET(allZeroData, 0, 1);  \
  if ( data == NULL ) { data = allZeroData; } \
if ( 1 == endpoint ) { \
    if ( 0x0006 == clusterId ) { \
if ( 0x0000 == metadata->attributeId && 0x0000 == emberAfGetMfgCode(metadata) && !emberAfAttributeIsClient(metadata) ) \
          halCommonSetToken(TOKEN_ON_OFF_1, data); \
    } \
} \
if ( 2 == endpoint ) { \
    if ( 0x0006 == clusterId ) { \
if ( 0x0000 == metadata->attributeId && 0x0000 == emberAfGetMfgCode(metadata) && !emberAfAttributeIsClient(metadata) ) \
          halCommonSetToken(TOKEN_ON_OFF_2, data); \
    } \
} \
if ( 3 == endpoint ) { \
    if ( 0x0006 == clusterId ) { \
if ( 0x0000 == metadata->attributeId && 0x0000 == emberAfGetMfgCode(metadata) && !emberAfAttributeIsClient(metadata) ) \
          halCommonSetToken(TOKEN_ON_OFF_3, data); \
    } \
} \
} while (false)
